generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
	USER
  	ADMIN
	OWNER
}

model User {
	id				Int  			@id @default(autoincrement())
    firstName 		String
	lastName		String
	email			String			@unique
	password 		String
	role			Role? 			@default(USER)
	createdAt 		DateTime? 		@default(now())
	orginizationId  Int?
	originization	Orginization? 	@relation(fields: [orginizationId], references: [id])
	strandTemplates StandTemplate[]
	refreshTokens  	RefreshToken[]
	stands			Stand[]
	lessons			Lesson[]
}

model RefreshToken {
	id 			Int  		@id @default(autoincrement())
	token       String
	userId      Int
	user        User 		@relation(fields: [userId], references: [id])
	expires     DateTime
	createdAt 	DateTime 	@default(now())
}

model Orginization {
	id 				Int  		@id @default(autoincrement())
    name			String
	createdAt 		DateTime 	@default(now())
	users			User[]
	stands			Stand[]
	subjects		Subject[]
}

model Subject {
	id 				Int  		@id @default(autoincrement())
	name			String
	createdAt 		DateTime 	@default(now())
	orginizationId  Int
	orginization	Orginization @relation(fields: [orginizationId], references: [id])
	standTemplates 	StandTemplate[]
	lessons			Lesson[]
}

model Lesson {
	id 				Int  			@id @default(autoincrement())
	name        	String
	createdAt 		DateTime 		@default(now())
	userId  		Int
	user   			User    		@relation(fields: [userId], references: [id])
	subjectId		Int			
	subject 		Subject			@relation(fields: [subjectId], references: [id])
}

model Stand {
	id 				Int  				@id @default(autoincrement()) 
	name        	String
	createdAt 		DateTime 			@default(now())
	orginizationId  Int
	orginization    Orginization    	@relation(fields: [orginizationId], references: [id])
	userId      	Int
	user        	User    			@relation(fields: [userId], references: [id])
}

model StandTemplate {
	id 				Int  				@id @default(autoincrement())
	name        	String
	createdAt 		DateTime 			@default(now())
	userId  		Int
	user    		User    			@relation(fields: [userId], references: [id])
	questions 		StandQuestion[]
	subjectId		Int
	subject			Subject				@relation(fields: [subjectId], references: [id])
}

model StandQuestion {
	id 					Int  			@id @default(autoincrement())
	question    		String
	standTemplateId     Int
	standTemplate       StandTemplate   	@relation(fields: [standTemplateId], references: [id])
	answers     		QuestionAnwser[]
}

model QuestionAnwser {
	id 			Int  		@id @default(autoincrement())
	createdAt 	DateTime 		@default(now())
	answer      Int
	questionId  Int
	question    StandQuestion 	@relation(fields: [questionId], references: [id])
}
